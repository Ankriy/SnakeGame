<div class="text-center">
<canvas id="canvas" width="500" height="500" style="border: 1px solid black;"></canvas>
<input id="reset-button" type="button" style="height: 50px; width: 100px; vertical-align: top" value="Сброс" />
</div>

<script>

    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");
    let player = 1;
    let prevPoint = null;
    let firstPoint = null;
    const points = [];
    const checkedpoints = [];
    for (let i = 0; i < 6; i++) {
        for (let j = 0; j < 6; j++) {
            const x = 50 + i * 75;
            const y = 50 + j * 75;
            points.push({ x, y });
            ctx.beginPath();
            ctx.arc(x, y, 4, 0, 2 * Math.PI);
            ctx.fillStyle = "black";
            ctx.fill();
        }
    }

    canvas.addEventListener("mousedown", (e) => {
        const rect = canvas.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        const nearestPoint = points.reduce((prev, curr) => {
            const prevDist = Math.sqrt(Math.pow(prev.x - x, 2) + Math.pow(prev.y - y, 2));
            const currDist = Math.sqrt(Math.pow(curr.x - x, 2) + Math.pow(curr.y - y, 2));
            return currDist < prevDist ? curr : prev;
        });

        if (prevPoint == null) { 
            firstPoint = nearestPoint
            prevPoint = nearestPoint;
            checkedpoints.push( nearestPoint );
            return;
        }

        if (checkedpoints.includes(nearestPoint)) {
            
            alert("Игрок #" + player + " проиграл");
            $.ajax({
                type: "POST",
                url: "@Url.Action("SnakeAdd", "Snakes")",
                data: {
                    looser: player
                },
                success: function (response) {

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    showError();
                }
            })
        }
        if ((nearestPoint.x == prevPoint.x || nearestPoint.y == prevPoint.y) &&
        (Math.abs(nearestPoint.x - prevPoint.x) <= 75 && Math.abs(nearestPoint.y - prevPoint.y) <= 75)) { 
            const line = {
                Start: {
                    X: prevPoint.x,
                    Y: prevPoint.y
                },
                End: {
                    X: nearestPoint.x,
                    Y: nearestPoint.y
                }
            };
            drawLine(line);
            checkedpoints.push(nearestPoint);
            prevPoint = nearestPoint;
        }
        else if (firstPoint.x == nearestPoint.x || firstPoint.y == nearestPoint.y &&
            (Math.abs(nearestPoint.x - firstPoint.x) <= 75 && Math.abs(nearestPoint.y - firstPoint.y) <= 75)) {
            const line = {
                Start: {
                    X: firstPoint.x,
                    Y: firstPoint.y
                },
                End: {
                    X: nearestPoint.x,
                    Y: nearestPoint.y
                }
            };
            drawLine(line);
            checkedpoints.push(nearestPoint);
            firstPoint = nearestPoint;
        }

        
        $('#reset-button').click(function () {
            $.ajax({
                url: "@Url.Action("Snake", "Snakes")",
                method: "POST",
                success: function (response) {
                    window.location.reload();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    showError();
                }
            });
        });


    });

    function drawLine(line) {
        ctx.beginPath();
        ctx.moveTo(line.Start.X, line.Start.Y);
        ctx.lineTo(line.End.X, line.End.Y);
        if(player == 2){
            ctx.strokeStyle = "blue";
            player--
        }
        else{
            ctx.strokeStyle = "green";
            player++
        }
        ctx.lineWidth = 2;
        ctx.stroke();
    }
</script>

